// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Side bar component should not render tab when not enabled for type 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="tabs"
      >
        <ul>
          <li>
            <a
              class="tab"
              href="/undefined/?activeTab=DOCUMENTS"
            >
              Documents
            </a>
          </li>
        </ul>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="tabs"
    >
      <ul>
        <li>
          <a
            class="tab"
            href="/undefined/?activeTab=DOCUMENTS"
          >
            Documents
          </a>
        </li>
      </ul>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Side bar component should render with default props 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div />
  </body>,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Side bar component should render with supplied tabs 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="tabs"
      >
        <ul>
          <li>
            <a
              class="tab tab__active"
              href="/undefined/?activeTab=DOCUMENTS"
            >
              Documents
            </a>
          </li>
          <li>
            <a
              class="tab"
              href="/undefined/?activeTab=TIMELINE"
            >
              Timeline
            </a>
          </li>
        </ul>
        <div
          class="govuk-grid-row"
        >
          <div
            class="govuk-grid-column-full"
          >
            <a
              class="govuk-body govuk-link"
              href="/case/some_case_id/stage/some_stage_id/entity/document/manage"
            >
              Manage Documents
            </a>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="tabs"
    >
      <ul>
        <li>
          <a
            class="tab tab__active"
            href="/undefined/?activeTab=DOCUMENTS"
          >
            Documents
          </a>
        </li>
        <li>
          <a
            class="tab"
            href="/undefined/?activeTab=TIMELINE"
          >
            Timeline
          </a>
        </li>
      </ul>
      <div
        class="govuk-grid-row"
      >
        <div
          class="govuk-grid-column-full"
        >
          <a
            class="govuk-body govuk-link"
            href="/case/some_case_id/stage/some_stage_id/entity/document/manage"
          >
            Manage Documents
          </a>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Side bar component should show the correct tab when param is passed 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="tabs"
      >
        <ul>
          <li>
            <a
              class="tab"
              href="/undefined/?activeTab=DOCUMENTS"
            >
              Documents
            </a>
          </li>
          <li>
            <a
              class="tab tab__active"
              href="/undefined/?activeTab=TIMELINE"
            >
              Timeline
            </a>
          </li>
        </ul>
        <div
          class="govuk-grid-row"
        >
          <div
            class="govuk-grid-column-full"
          >
            <details
              class="govuk-details"
            >
              <summary
                class="govuk-details__summary"
              >
                <span
                  class="govuk-details__summary-text"
                >
                  Add case note
                </span>
              </summary>
              <div
                class="govuk-details__text"
              >
                <form
                  action="/case/some_case_id/stage/some_stage_id/note"
                >
                  <div
                    class="govuk-form-group"
                  >
                    <label
                      class="govuk-label govuk-label--s"
                      for="case-note"
                      id="case-note-label"
                    >
                      Case note
                    </label>
                    <textarea
                      class="govuk-textarea form-control-3-4"
                      id="case-note"
                      name="case-note"
                      rows="5"
                    />
                  </div>
                  <input
                    class="govuk-button"
                    type="submit"
                    value="Add"
                  />
                </form>
              </div>
            </details>
            <div
              class="timeline"
            >
              <ul />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="tabs"
    >
      <ul>
        <li>
          <a
            class="tab"
            href="/undefined/?activeTab=DOCUMENTS"
          >
            Documents
          </a>
        </li>
        <li>
          <a
            class="tab tab__active"
            href="/undefined/?activeTab=TIMELINE"
          >
            Timeline
          </a>
        </li>
      </ul>
      <div
        class="govuk-grid-row"
      >
        <div
          class="govuk-grid-column-full"
        >
          <details
            class="govuk-details"
          >
            <summary
              class="govuk-details__summary"
            >
              <span
                class="govuk-details__summary-text"
              >
                Add case note
              </span>
            </summary>
            <div
              class="govuk-details__text"
            >
              <form
                action="/case/some_case_id/stage/some_stage_id/note"
              >
                <div
                  class="govuk-form-group"
                >
                  <label
                    class="govuk-label govuk-label--s"
                    for="case-note"
                    id="case-note-label"
                  >
                    Case note
                  </label>
                  <textarea
                    class="govuk-textarea form-control-3-4"
                    id="case-note"
                    name="case-note"
                    rows="5"
                  />
                </div>
                <input
                  class="govuk-button"
                  type="submit"
                  value="Add"
                />
              </form>
            </div>
          </details>
          <div
            class="timeline"
          >
            <ul />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
