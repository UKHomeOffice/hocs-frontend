version: '2.4' # v3 doesn't support depends_on condition

services:

  postgres:
    image: postgres:9.6
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    restart: always
    ports:
    - 5432:5432
    networks:
    - hocs-network
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
    volumes:
      - ./db_setup:/docker-entrypoint-initdb.d
    tmpfs:
    - /var/lib/postgresql

  clamd:
    healthcheck:
      test: [ "CMD", "./check.sh"]
      start_period: 2m
    image: mkodockx/docker-clamav:buster-slim
    ports:
    - "3310:3310/tcp"
    networks:
    - hocs-network

  clamav:
    healthcheck:
      # -f makes curl exit with 22 on error (it doesn't normally)
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
    image: lokori/clamav-rest
    environment:
    - CLAMD_HOST=clamd
    ports:
    - 8086:8080
    networks:
    - hocs-network
    depends_on:
      clamd:
        condition: service_healthy

  keycloak:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth"]
    image: jboss/keycloak:5.0.0
    restart: always
    ports:
    - 9990:9990
    - 9081:8080
    networks:
    - hocs-network
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password1
      KEYCLOAK_IMPORT: /tmp/local-realm.json
      DB_VENDOR: h2
    volumes:
    - ${PWD}/keycloak:/tmp

  localstack:
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal es list-domain-names
          && awslocal s3 ls
          && awslocal sqs list-queues
      interval: 5s
      timeout: 10s
      start_period: 90s
    image: localstack/localstack:0.9.5
    ports:
      - 9000:8080
      - 4572:4572
      - 4576:4576
      - 4575:4575
      - 4571:4571
      - 4578:4578
    networks:
    - hocs-network
    environment:
      HOSTNAME_EXTERNAL: localstack
      DEFAULT_REGION: eu-west-2
      SERVICES: sqs,s3,sns,es

  aws_cli:
    image: xueshanf/awscli
    command:
    - /bin/sh
    - -c
    - |
      sleep 30
      aws --version
      aws --endpoint-url=http://localstack:4572 s3 mb s3://untrusted-bucket
      aws --endpoint-url=http://localstack:4572 s3 mb s3://trusted-bucket
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue-dlq
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name audit-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name audit-queue-dlq
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name search-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name search-queue-dlq
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name notify-queue
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name notify-queue-dlq
      aws --endpoint-url=http://localstack:4575 sns create-topic --name hocs-audit-topic
      aws --endpoint-url=http://localstack:4575 sns subscribe --topic-arn arn:aws:sns:eu-west-2:123456789012:hocs-audit-topic --attributes RawMessageDelivery=true --protocol sqs --notification-endpoint arn:aws:sns:eu-west-2:123456789012:audit-queue
      aws --endpoint-url=http://localstack:4575 sns subscribe --topic-arn arn:aws:sns:eu-west-2:123456789012:hocs-audit-topic --attributes RawMessageDelivery=true --protocol sqs --notification-endpoint arn:aws:sns:eu-west-2:123456789012:search-queue
      aws --endpoint-url=http://localstack:4575 sns set-subscription-attributes --subscription-arn $$(aws --endpoint-url=http://localstack:4575 sns list-subscriptions-by-topic --topic-arn arn:aws:sns:eu-west-2:123456789012:hocs-audit-topic --output json | jq --raw-output '.Subscriptions[0].SubscriptionArn') --attribute-name RawMessageDelivery --attribute-value true
      aws --endpoint-url=http://localstack:4575 sns set-subscription-attributes --subscription-arn $$(aws --endpoint-url=http://localstack:4575 sns list-subscriptions-by-topic --topic-arn arn:aws:sns:eu-west-2:123456789012:hocs-audit-topic --output json | jq --raw-output '.Subscriptions[1].SubscriptionArn') --attribute-name RawMessageDelivery --attribute-value true
      aws --endpoint-url=http://localstack:4575 sns list-subscriptions
    environment:
      AWS_ACCESS_KEY_ID: UNSET
      AWS_SECRET_ACCESS_KEY: UNSET
      AWS_DEFAULT_REGION: 'eu-west-2'
    networks:
    - hocs-network
    depends_on:
      localstack:
        condition: service_healthy

  frontend:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
    image: quay.io/ukhomeofficedigital/hocs-frontend
    # image: hocs-frontend-test
    ports:
    - 8080:8080
    networks:
    - hocs-network
    environment:
      USE_CLIENTSIDE: 'true'
      WORKFLOW_SERVICE: http://workflow:8080
      CASEWORK_SERVICE: http://casework:8080
      INFO_SERVICE: http://info:8080
      DOCUMENT_SERVICE: http://documents:8080
      ALLOWED_FILE_EXTENSIONS: 'txt,doc,docx'
      DOCUMENT_BULK_LIMIT: 40
      VALID_DAYS_RANGE: 180
      S3_BUCKET: 'untrusted-bucket'
      S3_ENDPOINT: http://localstack:4572
    depends_on:
      workflow:
        condition: service_healthy
      casework:
        condition: service_healthy
      info:
        condition: service_healthy
      documents:
        condition: service_healthy
      localstack:
        condition: service_healthy

  casework:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      start_period: 240s
    image: quay.io/ukhomeofficedigital/hocs-casework
    #image: hocs-casework-test
    ports:
    - 8082:8080
    networks:
    - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      DB_HOST: 'postgres'
      AWS_LOCAL_HOST: 'localstack'
      HOCS_INFO_SERVICE: 'http://info:8080'
      HOCS_AUDITSERVICE: 'http://audit:8080'
      HOCS_SEARCH_SERVICE: 'http://search:8080'
      HOCS_DOCUMENT_SERVICE: 'http://documents:8080'
      AUDIT_TOPIC_NAME: "hocs-audit-topic"
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy

  workflow:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      start_period: 240s
    image: quay.io/ukhomeofficedigital/hocs-workflow
    # image: hocs-workflow-test
    ports:
    - 8091:8080
    networks:
    - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DOCS_QUEUE_NAME: 'document-queue'
      DOCS_QUEUE_DLQ_NAME: 'document-queue-dlq'
      HOCS_URL: 'http://localhost:8080'
      HOCS_CASE_SERVICE: 'http://casework:8080'
      HOCS_DOCUMENT_SERVICE: 'http://documents:8080'
      HOCS_INFO_SERVICE: 'http://info:8080'
      DB_HOST: 'postgres'
      DB_SCHEMA_NAME: 'workflow'
      AWS_LOCAL_HOST: 'localstack'
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy # this waits until healthcheck passes
      aws_cli:
        condition: service_started # this doesn't

  audit:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      start_period: 60s
    image: quay.io/ukhomeofficedigital/hocs-audit
    #image: hocs-audit-test
    ports:
    - 8087:8080
    networks:
    - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      DB_HOST: 'postgres'
      AUDIT_QUEUE_NAME: 'audit-queue'
      AUDIT_QUEUE_DLQ_NAME: 'audit-queue-dlq'
      HOCS_INFO_SERVICE: 'http://info:8080'
      AWS_LOCAL_HOST: 'localstack'
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy

  search:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      start_period: 180s
    image: quay.io/ukhomeofficedigital/hocs-search
    #image: hocs-search-test
    ports:
    - 8088:8080
    networks:
    - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local, localelastic'
      SERVER_PORT: 8080
      DB_HOST: 'postgres'
      SEARCH_QUEUE_NAME: 'search-queue'
      SEARCH_QUEUE_DLQ_NAME: 'search-queue-dlq'
      AWS_LOCAL_HOST: 'localstack'
      ELASTIC_INDEX_PREFIX: 'local'
      ELASTICSEARCH_HOST: 'localstack'
      ELASTICSEARCH_PORT: '4571'
      ELASTICSEARCH_ACCESS_KEY: 'UNSET'
      ELASTICSEARCH_SECRET_KEY: 'UNSET'
      AWS_SQS_ACCESS_KEY: 'UNSET'
      AWS_SQS_SECRET_KEY: 'UNSET'
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      aws_cli:
        condition: service_started

  info:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
    image: quay.io/ukhomeofficedigital/hocs-info-service
    #image: hocs-info-service-test
    ports:
    - 8085:8080
    networks:
    - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      DB_HOST: 'postgres'
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DOCS_QUEUE_NAME: 'document-queue'
      DOCS_QUEUE_DLQ_NAME: 'document-queue-dlq'
      HOCS_CASE_SERVICE: 'http://casework:8080'
      HOCS_DOCUMENT_SERVICE: 'http://documents:8080'
      KEYCLOAK_SERVER_ROOT: 'http://keycloak:8080'
      AUDIT_QUEUE_NAME: 'audit-queue'
      AUDIT_QUEUE_DLQ_NAME: 'audit-queue-dlq'
      HOCS_AUDIT_SERVICE: 'http://audit:8080'
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      aws_cli:
        condition: service_started
  converter:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
    image: quay.io/ukhomeofficedigital/hocs-docs-converter
    ports:
    - 8084:8080
    networks:
    - hocs-network
    environment:
      SERVER_PORT: 8080

  documents:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      start_period: 90s
    image: quay.io/ukhomeofficedigital/hocs-docs
    ports:
    - 8083:8080
    networks:
    - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local, postgres'
      SPRING_FLYWAY_SCHEMAS: 'document'
      SERVER_PORT: 8080
      DOCS_QUEUE_NAME: 'document-queue'
      DOCS_QUEUE_DLQ_NAME: 'document-queue-dlq'
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DOCS_TRUSTEDS3BUCKETNAME: 'trusted-bucket'
      DOCS_UNTRUSTEDS3BUCKETNAME: 'untrusted-bucket'
      HOCSCONVERTER_ROOT: 'http4://converter:8080'
      CLAMAV_ROOT: 'http4://clamav:8080'
      DB_HOST: 'postgres'
      AWS_LOCAL_HOST: 'localstack'
    depends_on:
      clamav:
        condition: service_healthy
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      converter:
        condition: service_healthy
      aws_cli:
        condition: service_started

  templates:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
    image: quay.io/ukhomeofficedigital/hocs-templates
    ports:
      - 8090:8080
    networks:
      - hocs-network
    environment:
      SERVER_PORT: 8080
      HOCS_INFO_SERVICE: 'http://info:8080'
      HOCS_AUDITSERVICE: 'http://casework:8080'
      HOCS_SEARCH_SERVICE: 'http://documents:8080'
    depends_on:
      info:
        condition: service_healthy
      audit:
        condition: service_healthy
      documents:
        condition: service_healthy
networks:
  hocs-network:
