version: '3.1'

services:

  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    networks:
      - hocs-network
    environment:
     POSTGRES_USER: root
     POSTGRES_PASSWORD: dev
    tmpfs:
      - /var/lib/postgresql

  clamd:
    image: quay.io/ukhomeofficedigital/clamav:v1.4.0
    networks:
      - hocs-network
    ports:
      - "3310:3310/tcp"

  clamav:
    image: lokori/clamav-rest
    networks:
      - hocs-network
    environment:
      - CLAMD_HOST=clamd
    ports:
      - 8086:8080
    depends_on:
      - clamd

  keycloak:
    image: jboss/keycloak
    restart: always
    ports:
    - 9990:9990
    - 9081:8080
    networks:
    - hocs-network
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password1
      KEYCLOAK_IMPORT: /tmp/local-realm.json
      DB_VENDOR: h2
    volumes:
    - ${PWD}/keycloak:/tmp

  localstack:
    image: localstack/localstack:latest
    ports:
      - 9000:8080
      - 4572:4572
      - 4576:4576
    networks:
      - hocs-network
    environment:
      HOSTNAME_EXTERNAL: localstack
      DEFAULT_REGION: eu-west-2
      SERVICES: sqs,s3

  aws_cli:
    image: garland/aws-cli-docker
    networks:
      - hocs-network
    command:
          - /bin/sh
          - -c
          - |
              aws --endpoint-url=http://localstack:4572 s3 mb s3://untrusted-bucket
              aws --endpoint-url=http://localstack:4572 s3 mb s3://trusted-bucket
              aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue
              aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name case-queue-dlq
              aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue
              aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name document-queue-dlq
              aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue
              aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name reporting-queue-dlq
    environment:
      AWS_ACCESS_KEY_ID: UNSET
      AWS_SECRET_ACCESS_KEY: UNSET
      AWS_DEFAULT_REGION: 'eu-west-2'
    depends_on:
     - localstack

  frontend:
    image: quay.io/ukhomeofficedigital/hocs-frontend
    # image: hocs-frontend-test
    ports:
      - 8080:8080
    networks:
      - hocs-network
    environment:
      USE_CLIENTSIDE: 'true'
      WORKFLOW_SERVICE: http://workflow:8080
      CASEWORK_SERVICE: http://casework:8080
      INFO_SERVICE: http://info:8080
      DOCUMENT_SERVICE: http://documents:8080
      ALLOWED_FILE_EXTENSIONS: 'txt,doc,docx'
      DOCUMENT_BULK_LIMIT: 40
      S3_BUCKET: 'untrusted-bucket'
      S3_ENDPOINT: http://localstack:4572
    depends_on:
     - workflow
     - casework
     - info
     - documents

  casework:
    image: quay.io/ukhomeofficedigital/hocs-casework
    # image: hocs-casework-test
    ports:
      - 8082:8080
    networks:
      - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DB_HOST: 'postgres'
      AWS_LOCAL_HOST: 'localstack'
      HOCS_INFO_SERVICE: 'http://info:8080'
      AUDIT_QUEUE_NAME: 'reporting-queue'
      AUDIT_QUEUE_DLQ_NAME: 'reporting-queue-dlq'
    depends_on:
      - postgres

  workflow:
    image: quay.io/ukhomeofficedigital/hocs-workflow
    # image: hocs-workflow-test
    ports:
      - 8081:8080
    networks:
      - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DOCS_QUEUE_NAME: 'document-queue'
      DOCS_QUEUE_DLQ_NAME: 'document-queue-dlq'
      HOCS_URL: 'http://localhost:8080'
      HOCS_CASE_SERVICE: 'http://casework:8080'
      HOCS_DOCUMENT_SERVICE: 'http://documents:8080'
      HOCS_INFO_SERVICE: 'http://info:8080'
      DB_HOST: 'postgres'
      AWS_LOCAL_HOST: 'localstack'
    depends_on:
      - postgres

  audit:
    image: quay.io/ukhomeofficedigital/hocs-audit
    # image: hocs-workflow-test
    ports:
      - 8087:8080
    networks:
      - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      DB_HOST: 'postgres'
      AUDIT_QUEUE_NAME: 'reporting-queue'
      AUDIT_QUEUE_DLQ_NAME: 'reporting-queue-dlq'
      AWS_LOCAL_HOST: 'localstack'
    depends_on:
      - postgres

  info:
    image: quay.io/ukhomeofficedigital/hocs-info-service
    # image: hocs-info-service-test
    ports:
      - 8085:8080
    networks:
      - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local'
      SERVER_PORT: 8080
      DB_HOST: 'postgres'
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DOCS_QUEUE_NAME: 'document-queue'
      DOCS_QUEUE_DLQ_NAME: 'document-queue-dlq'
      HOCS_CASE_SERVICE: 'http://casework:8080'
      HOCS_DOCUMENT_SERVICE: 'http://documents:8080'
      KEYCLOAK_SERVER_ROOT: 'http://keycloak:8080'
      AUDIT_QUEUE_NAME: 'reporting-queue'
      AUDIT_QUEUE_DLQ_NAME: 'reporting-queue-dlq'
      HOCS_AUDIT_SERVICE: 'http://audit:8080'
    depends_on:
      - postgres

  converter:
    image: quay.io/ukhomeofficedigital/hocs-docs-converter
    ports:
      - 8084:8080
    networks:
      - hocs-network

  documents:
    image: quay.io/ukhomeofficedigital/hocs-docs
    ports:
      - 8083:8080
    networks:
      - hocs-network
    environment:
      SPRING_PROFILES_ACTIVE: 'development, local, postgres'
      SERVER_PORT: 8080
      DOCS_QUEUE_NAME: 'document-queue'
      DOCS_QUEUE_DLQ_NAME: 'document-queue-dlq'
      CASE_QUEUE_NAME: 'case-queue'
      CASE_QUEUE_DLQ_NAME: 'case-queue-dlq'
      DOCS_TRUSTEDS3BUCKETNAME: 'trusted-bucket'
      DOCS_UNTRUSTEDS3BUCKETNAME: 'untrusted-bucket'
      HOCSCONVERTER_ROOT: 'http4://converter:8080'
      CLAMAV_ROOT: 'http4://clamav:8080'
      DB_HOST: 'postgres'
      AWS_LOCAL_HOST: 'localstack'
    depends_on:
      - converter
      - postgres

networks:
  hocs-network:
